{"ast":null,"code":"import { ADD_POST, GET_POSTS, GET_POST, DELETE_POST, POST_LOADDING, GET_ERRORS } from './types';\nimport axios from 'axios'; // add comments\n\nexport const addPost = postData => dispatch => {\n  axios.post(\"/api/posts\", postData).then(res => dispatch({\n    type: ADD_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // require content of comments\n\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading);\n  axios.get(\"/api/posts\").then(res => dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POSTS,\n    payload: null\n  }));\n}; // delete single comment\n\nexport const deletePost = id => dispatch => {\n  axios.delete(`/api/post/${id}`).then(res => dispatch({\n    type: DELETE_POST,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Like\n\nexport const addLike = id => dispatch => {\n  axios.post(`/apo/posts/like/${id}`).then(res => window.location.reload()).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Cancel Like\n\nexport const removeLike = id => dispatch => {\n  axios.post(`/api/posts/unlike/${id}`).then(res => window.location.reload()).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Require users' info who leave encpuraging comments\n\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading);\n  axios.get(`/api/posts/${id}`).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POST,\n    payload: null\n  }));\n}; // add comments in encouraging comment\n\nexport const addComment = (postId, commentData) => dispatch => {\n  axios.post(`/api/posts/comment/${postId}`, commentData).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // delete comment in encouraging comment\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(`/api/posts/comment/${postId}/${commentId}`).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // loading animation\n\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADDING\n  };\n};","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/actions/postActions.js"],"names":["ADD_POST","GET_POSTS","GET_POST","DELETE_POST","POST_LOADDING","GET_ERRORS","axios","addPost","postData","dispatch","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","deletePost","id","delete","addLike","window","location","reload","removeLike","getPost","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import { ADD_POST, GET_POSTS, GET_POST, DELETE_POST, POST_LOADDING, GET_ERRORS } from './types';\nimport axios from 'axios';\n// add comments\nexport const addPost = postData => dispatch => {\n  axios.post(\"/api/posts\", postData)\n    .then(res => \n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        }))\n}\n// require content of comments\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading);\n  axios.get(\"/api/posts\")\n    .then(res =>\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      }))\n      .catch(err => \n        dispatch({\n          type: GET_POSTS,\n          payload: null\n        }))\n}\n// delete single comment\nexport const deletePost = (id) => dispatch => {\n  axios.delete(`/api/post/${id}`)\n    .then(res =>\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        }))\n}\n// Like\nexport const addLike = (id) => dispatch => {\n  axios.post(`/apo/posts/like/${id}`)\n    .then(res =>\n      window.location.reload()\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        }))\n}\n// Cancel Like\nexport const removeLike = (id) => dispatch => {\n  axios.post(`/api/posts/unlike/${id}`)\n    .then(res =>\n      window.location.reload()\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      }))\n}\n// Require users' info who leave encpuraging comments\nexport const getPost = (id) => dispatch => {\n  dispatch(setPostLoading);\n  axios.get(`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_POST,\n          payload: null\n        }))\n}\n// add comments in encouraging comment\nexport const addComment = (postId, commentData) => dispatch => {\n  axios.post(`/api/posts/comment/${postId}`,commentData)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      }))\n      .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      }))\n}\n// delete comment in encouraging comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        }))\n}\n\n// loading animation\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADDING\n  }\n}"]},"metadata":{},"sourceType":"module"}