{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/common/SelectListGroup.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport classnames from 'classnames';\n\nconst SelectListGroup = ({\n  name,\n  value,\n  error,\n  info,\n  onChange,\n  options\n}) => {\n  const selectOptions = options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.label,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, option.value));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"slecet\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    name: name,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, selectOptions), info && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }\n  }, info), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }\n  }, error));\n};\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/common/SelectListGroup.js"],"names":["React","PropTypes","classnames","SelectListGroup","name","value","error","info","onChange","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,IADuB;AAEvBC,EAAAA,KAFuB;AAGvBC,EAAAA,KAHuB;AAIvBC,EAAAA,IAJuB;AAKvBC,EAAAA,QALuB;AAMvBC,EAAAA;AANuB,CAAD,KAOlB;AACJ,QAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,iBACtC;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,IAAA,KAAK,EAAED,MAAM,CAACP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDO,MAAM,CAACP,KAAxD,CADoB,CAAtB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAEH,UAAU,CAAC,8BAAD,EAAiC;AACpD,oBAAcI;AADsC,KAAjC,CADrB;AAIA,IAAA,IAAI,EAAEF,IAJN;AAKA,IAAA,KAAK,EAAEC,KALP;AAMA,IAAA,QAAQ,EAAEG,QANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGE,aARH,CADF,EAWGH,IAAI,iBAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAXX,EAYGD,KAAK,iBAAK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAZb,CADF;AAgBD,CA3BD;;AA6BAH,eAAe,CAACW,SAAhB,GAA4B;AAC1BV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADG;AAE1BX,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UAFE;AAG1BT,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAHU;AAI1BT,EAAAA,KAAK,EAAEL,SAAS,CAACc,MAJS;AAK1BP,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UALC;AAM1BP,EAAAA,OAAO,EAAER,SAAS,CAACiB,KAAV,CAAgBF;AANC,CAA5B;AASA,eAAeb,eAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport classnames from 'classnames';\n\nconst SelectListGroup = ({\n  name,\n  value,\n  error,\n  info,\n  onChange,\n  options\n}) => {\n  const selectOptions = options.map(option => (\n    <option key={option.label} value={option.value}>{option.value}</option>\n  ));\n  return (\n    <div className=\"form-group\">\n      <slecet\n      className={classnames('form-control form-control-lg', {\n        'is-invalid': error\n      })}\n      name={name}\n      value={value}\n      onChange={onChange}\n      >\n        {selectOptions}\n      </slecet>\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && (<div className=\"invalid-feedback\">{error}</div>)}\n    </div>\n  );\n}\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\n\nexport default SelectListGroup;"]},"metadata":{},"sourceType":"module"}