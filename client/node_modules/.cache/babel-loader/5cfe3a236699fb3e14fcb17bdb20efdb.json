{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/components/post/CommentForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\nimport { addComment } from '../../actions/postActions';\nexport class CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: '',\n      errors: {}\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props.auth;\n      const {\n        postId\n      } = this.props;\n      const newComment = {\n        text: this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n      this.props.addComment(postId, newComment);\n      this.setState({\n        text: ''\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.errors) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-form mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header bg-info text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Please encourage me...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Please encourage me...\",\n      name: \"text\",\n      value: this.state.text,\n      onChange: this.onChange,\n      error: errors.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: (postId, newComment) => {\n      dispatch(addComment(postId, newComment));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentForm);","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/components/post/CommentForm.js"],"names":["React","Component","connect","TextAreaFieldGroup","addComment","CommentForm","state","text","errors","onSubmit","e","preventDefault","user","props","auth","postId","newComment","name","avatar","setState","onChange","target","value","componentWillReceiveProps","newProps","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\nimport { addComment } from '../../actions/postActions';\n\nexport class CommentForm extends Component {\n  state = {\n    text: '',\n    errors: {}\n  }\n  componentWillReceiveProps(newProps) {\n    if(newProps.errors) {\n      this.setState({ errors: newProps.errors })\n    }\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { user } = this.props.auth;\n    const { postId } = this.props;\n    const newComment = {\n      text: this.state.text,\n      name: user.name,\n      avatar: user.avatar\n    }\n\n    this.props.addComment(postId, newComment);\n    this.setState({ text: ''});\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"post-form mb-3\">\n        <div className=\"card card-info\">\n          <div className=\"card-header bg-info text-white\">Please encourage me...</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <TextAreaFieldGroup\n                  placeholder=\"Please encourage me...\"\n                  name=\"text\"\n                  value={this.state.text}\n                  onChange={this.onChange}\n                  error={errors.text}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-dark\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: (postId, newComment) => {\n      dispatch(addComment(postId, newComment))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentForm);"]},"metadata":{},"sourceType":"module"}