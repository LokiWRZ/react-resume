{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/components/auth/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport TextFieldGroup from '../../common/TextFieldGroup';\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(newUser);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  //page render\n  componentDidMount() {\n    // If auth, jump to control page\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  } //If have error reminder when receive new data, assign value\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    //isAuth?\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    } else {\n      console.log('Not Login');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"login\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Have a existing account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"email\",\n      placeholder: \"email address\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      error: errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"password\",\n      placeholder: \"pwd\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      error: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n} // Get the property value of initalState which have defined in actions in reduce\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  auth: state.auth\n}); //dispatch function\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: params => {\n      dispatch(loginUser(params));\n    }\n  };\n}; // define the type transferred by reduce\n\n\nLogin.propTypes = {\n  errors: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/components/auth/Login.js"],"names":["React","Component","PropTypes","connect","loginUser","TextFieldGroup","Login","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","newUser","email","state","password","errors","componentDidMount","auth","isAuthenticated","history","push","UNSAFE_componentWillReceiveProps","nextProps","console","log","render","mapStateToProps","mapDispatchToProps","dispatch","params","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport TextFieldGroup from '../../common/TextFieldGroup';\n\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    onSubmit = (e) => {\n        e.preventDefault()\n        const newUser = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.loginUser(newUser)\n    }\n\n    //page render\n    componentDidMount () {\n        // If auth, jump to control page\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/dashboard')\n        }\n    }\n    //If have error reminder when receive new data, assign value\n    UNSAFE_componentWillReceiveProps (nextProps) {\n        //isAuth?\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/dashboard')\n        } else {\n            console.log('Not Login');\n        }\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors })\n        }\n    }\n    render() {\n        const { errors } = this.props;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">login</h1>\n                            <p className=\"lead text-center\">Have a existing account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <TextFieldGroup\n                                    type=\"email\"\n                                    placeholder=\"email address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n\n                                <TextFieldGroup\n                                    type=\"password\"\n                                    placeholder=\"pwd\"\n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                    error={errors.password}\n                                />\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Get the property value of initalState which have defined in actions in reduce\nconst mapStateToProps = (state) => ({\n    errors: state.errors,\n    auth: state.auth,\n})\n//dispatch function\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loginUser: (params) => {\n            dispatch(loginUser(params))\n        }\n    }\n}\n// define the type transferred by reduce\nLogin.propTypes = {\n        errors: PropTypes.object.isRequired,\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}