{"ast":null,"code":"import axios from 'axios';\nimport { SET_CURRENT_USER, GET_PROFILE, GET_PROFILES, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS } from './types'; //User indivadual information data\n\nexport const getCurrentProfile = () => dispatch => {\n  //load animation\n  dispatch(setProfileLoading()); // require logined user's personal information data\n\n  axios('/api/profile').then(res => {\n    //return data after required successful\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: {}\n    });\n  });\n}; // get information of all developers\n\nexport const getProfiles = () => dispatch => {\n  //load animation\n  dispatch(setProfileLoading()); //require information data of all developers\n\n  axios('/api/profile/all').then(res => {\n    //return data after require successful\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_PROFILES,\n      payload: null\n    });\n  });\n}; //loading animation\n\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING\n  };\n}; //clear user's info\n\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n}; //create personal info\n\nexport const createProfile = (profileData, history) => dispatch => {\n  //load animation\n  dispatch(setProfileLoading());\n  axios.post(\"/api/profile\", profileData).then(res => {\n    console.log('profileData', profileData);\n    history.push(\"/dashboard\");\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // delete account\n\nexport const deleteAccout = params => dispatch => {\n  // load animation\n  dispatch(setProfileLoading());\n  axios.delete(\"/api/profile\").then(res => dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // add personal experience\n\nexport const addExperience = (expData, history) => dispatch => {\n  //loading animation\n  dispatch(setProfileLoading());\n  axios.post(\"/api/profile/experience\", expData).then(res => history.push(\"/dashboard\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // add education experience\n\nexport const addEducation = (expData, history) => dispatch => {\n  axios.post(\"/api/profile/education\", expData).then(res => history.push(\"/dashboard\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // delete education\n\nexport const deleteEducation = id => dispatch => {\n  // loading animation\n  dispatch(setProfileLoading());\n  axios.delete(`/api/profile/education/${id}`).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //delete personal experience\n\nexport const deleteExperience = id => dispatch => {\n  //loading animation\n  dispatch(setProfileLoading());\n  axios.delete(`/api/profile/experience/${id}`).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // get more info about developers based on dynamic router 'handle'\n\nexport const getProfileByHandle = handle => dispatch => {\n  //load animation\n  dispatch(setProfileLoading());\n  axios(`/api/profile/handle/${handle}`).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: null\n  }));\n};","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/actions/profileActions.js"],"names":["axios","SET_CURRENT_USER","GET_PROFILE","GET_PROFILES","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","GET_ERRORS","getCurrentProfile","dispatch","setProfileLoading","then","res","type","payload","data","catch","err","getProfiles","clearCurrentProfile","createProfile","profileData","history","post","console","log","push","response","deleteAccout","params","delete","addExperience","expData","addEducation","deleteEducation","id","deleteExperience","getProfileByHandle","handle"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { SET_CURRENT_USER, GET_PROFILE, GET_PROFILES, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS } from './types';\n\n//User indivadual information data\nexport const getCurrentProfile = () => dispatch => {\n  //load animation\n  dispatch(setProfileLoading())\n  // require logined user's personal information data\n  axios('/api/profile').then(res => {\n    //return data after required successful\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    })\n  }).catch(err => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: {}\n    })\n  })\n}\n\n// get information of all developers\nexport const getProfiles = () => dispatch => {\n  //load animation\n  dispatch(setProfileLoading())\n  //require information data of all developers\n  axios('/api/profile/all').then(res => {\n    //return data after require successful\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    })\n  }).catch(err => {\n    dispatch({\n      type:GET_PROFILES,\n      payload: null\n    })\n  })\n}\n\n//loading animation\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING\n  }\n}\n//clear user's info\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  }\n}\n\n//create personal info\nexport const createProfile = (profileData, history) => dispatch => {\n  //load animation\n  dispatch(setProfileLoading())\n  axios.post(\"/api/profile\", profileData)\n    .then(res => {\n      console.log('profileData', profileData);\n      history.push(\"/dashboard\")\n    })\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n// delete account\nexport const deleteAccout = (params) => dispatch => {\n  // load animation\n  dispatch(setProfileLoading())\n  axios.delete(\"/api/profile\")\n    .then(res =>\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        }))\n}\n\n// add personal experience\nexport const addExperience = (expData, history) => dispatch =>{\n  //loading animation\n  dispatch(setProfileLoading())\n  axios.post(\"/api/profile/experience\", expData)\n    .then(res => history.push(\"/dashboard\"))\n      .catch(err => \n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      )\n}\n\n// add education experience\nexport const addEducation = (expData, history) => dispatch => {\n  axios.post(\"/api/profile/education\", expData)\n    .then(res => history.push(\"/dashboard\"))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n        )\n}\n\n// delete education\nexport const deleteEducation = id => dispatch => {\n  // loading animation\n  dispatch(setProfileLoading())\n  axios.delete(`/api/profile/education/${id}`)\n    .then(res => \n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      })\n    )\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      }))\n}\n\n//delete personal experience\nexport const deleteExperience = id => dispatch => {\n  //loading animation\n  dispatch(setProfileLoading())\n  axios.delete(`/api/profile/experience/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        }))\n}\n\n// get more info about developers based on dynamic router 'handle'\nexport const getProfileByHandle = handle => dispatch => {\n  //load animation\n  dispatch(setProfileLoading())\n  axios(`/api/profile/handle/${handle}`)\n    .then(res =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      }))\n      .catch(err =>\n        dispatch({\n          type: GET_PROFILE,\n          payload: null\n        }))\n}"]},"metadata":{},"sourceType":"module"}