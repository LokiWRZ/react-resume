{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport router from './router'; // aviod lose data when refresh pages\n\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken); // decode JWToken\n\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded)); // Judge whether the token has expired\n  // get current time\n\n  const currentTime = Date.now() / 1000; // Current Time bigger than the expired time\n\n  if (currentTime > decoded.exp) {\n    // expire\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  }\n}\n\nexport class App extends Component {\n  render() {\n    let {\n      isAuthenticated\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, router.map((item, i) => {\n      return /*#__PURE__*/React.createElement(Route, {\n        exact: item.exact,\n        path: item.path,\n        key: i,\n        render: props => {\n          // in login status\n          if (isAuthenticated) {\n            return /*#__PURE__*/React.createElement(item.componentName, Object.assign({}, props, {\n              routes: item.children,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 28\n              }\n            }));\n          } // unAuth page\n\n\n          if (!item.auth) {\n            return /*#__PURE__*/React.createElement(item.componentName, Object.assign({}, props, {\n              routes: item.children,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 28\n              }\n            }));\n          } // unlogin && page auth jump to login page\n\n\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/login\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 26\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // get the initalState value frin action in reduce\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n}); // dispatch function\n\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","Switch","connect","store","setAuthToken","jwt_decode","setCurrentUser","logoutUser","Navbar","Footer","router","localStorage","jwtToken","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","render","isAuthenticated","props","auth","map","item","i","exact","path","children","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,QAHF,EAIEC,MAJF,QAKO,kBALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAA0B;AACxBR,EAAAA,YAAY,CAACO,YAAY,CAACC,QAAd,CAAZ,CADwB,CAExB;;AACA,QAAMC,OAAO,GAAGR,UAAU,CAACM,YAAY,CAACC,QAAd,CAA1B;AACAT,EAAAA,KAAK,CAACW,QAAN,CAAeR,cAAc,CAACO,OAAD,CAA7B,EAJwB,CAKxB;AACA;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CAPwB,CAQxB;;AACA,MAAGF,WAAW,GAAGF,OAAO,CAACK,GAAzB,EAA8B;AAC5B;AACAf,IAAAA,KAAK,CAACW,QAAN,CAAeP,UAAU,EAAzB;AACAY,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD;AACF;;AAED,OAAO,MAAMC,GAAN,SAAkB1B,SAAlB,CAA4B;AACjC2B,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAsB,KAAKC,KAAL,CAAWC,IAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIhB,MAAM,CAACiB,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,0BAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAED,IAAI,CAACE,KAAnB;AAA0B,QAAA,IAAI,EAAEF,IAAI,CAACG,IAArC;AAA2C,QAAA,GAAG,EAAEF,CAAhD;AAAmD,QAAA,MAAM,EAAGJ,KAAD,IAAW;AAC3E;AACA,cAAGD,eAAH,EAAoB;AAClB,gCAAO,oBAAC,IAAD,CAAM,aAAN,oBAAwBC,KAAxB;AAA+B,cAAA,MAAM,EAAEG,IAAI,CAACI,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,WAJ0E,CAK3E;;;AACA,cAAG,CAACJ,IAAI,CAACF,IAAT,EAAe;AACb,gCAAO,oBAAC,IAAD,CAAM,aAAN,oBAAwBD,KAAxB;AAA+B,cAAA,MAAM,EAAEG,IAAI,CAACI,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,WAR0E,CAS3E;;;AACA,8BAAO,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAXM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAYD,KAbD,CAFJ,CAFF,eAoBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CADF,CADF;AA0BD;;AA7BgC,C,CAgCnC;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB,C,CAIA;;;AACA,MAAMS,kBAAkB,GAAIrB,QAAD,IAAc;AACvC,SAAO,EAAP;AAGD,CAJD;;AAKA,eAAeZ,OAAO,CAAC+B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport router from './router';\n\n// aviod lose data when refresh pages\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken)\n  // decode JWToken\n  const decoded = jwt_decode(localStorage.jwtToken)\n  store.dispatch(setCurrentUser(decoded))\n  // Judge whether the token has expired\n  // get current time\n  const currentTime = Date.now() / 1000\n  // Current Time bigger than the expired time\n  if(currentTime > decoded.exp) {\n    // expire\n    store.dispatch(logoutUser())\n    window.location.href = '/login'\n  } \n}\n\nexport class App extends Component {\n  render() {\n    let { isAuthenticated } = this.props.auth\n    return (\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <Switch>\n            {\n              router.map((item, i) => {\n                return <Route exact={item.exact} path={item.path} key={i} render={(props) => {\n                  // in login status\n                  if(isAuthenticated) {\n                    return <item.componentName {...props} routes={item.children} />\n                  }\n                  // unAuth page\n                  if(!item.auth) {\n                    return <item.componentName {...props} routes={item.children} />\n                  }\n                  // unlogin && page auth jump to login page\n                  return <Redirect to='/login' />\n                }} />\n              })\n            }\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\n// get the initalState value frin action in reduce\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\n// dispatch function\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}