{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/components/posts/PostItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, ROute, Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { deletePost, addLike, removeLike } from '../../actions/postActions'; // Like Component\n\nexport class PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {}\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deletePost(id);\n    };\n\n    this.findUserLike = likes => {\n      const {\n        auth\n      } = this.props; // match user's id whether have like\n\n      if (likes.filter(like => like.user === auth.user.id).length > 0) return true;else return false;\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.errors) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  } // delete comments\n\n\n  // like\n  onLikeClick(id) {\n    this.props.addLike(id);\n  } // Like pattern\n\n\n  // Cancel like\n  onUnlikeClick(id) {\n    this.props.removeLike(id);\n  }\n\n  render() {\n    //get params from parent component\n    const {\n      post,\n      auth,\n      showActions\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body mb3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"profile.html\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: post.avatar,\n      alt: \"\",\n      className: \"rounded-circle d-nonse d-md-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, post.name), showActions ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onLikeClick.bind(this, post._id),\n      type: \"button\",\n      className: \"btn btn-light mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: classnames(\"fas fa-thumbs-up\", {\n        'text-info': this.findUserLike(post.likes)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, post.likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onUnlikeClick.bind(this, post._id),\n      type: \"button\",\n      className: \"btn btn-light mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"text-secondary fas fa-thumbs-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: `/post/${post._id}`,\n      className: \"btn but-info mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Encouraging comments\"), // judge whether the Login Id is same as the comment Id, if same, can delete it\n    post.user === auth.user.id ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onDeleteClick(post._id),\n      type: \"button\",\n      className: \"btn btn-danger mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, \"Delete\") : null) : null)));\n  }\n\n}\nPostItem.defaultProps = {\n  showActions: true\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deletePost: id => {\n      dispatch(deletePost(id));\n    },\n    addLike: id => {\n      dispatch(addLike(id));\n    },\n    removeLike: () => {\n      dispatch(removeLike(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem);","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/components/posts/PostItem.js"],"names":["React","Component","connect","BrowserRouter","Router","ROute","Link","classnames","deletePost","addLike","removeLike","PostItem","state","errors","onDeleteClick","id","props","findUserLike","likes","auth","filter","like","user","length","componentWillReceiveProps","newProps","setState","onLikeClick","onUnlikeClick","render","post","showActions","avatar","name","bind","_id","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, ROute, Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { deletePost, addLike, removeLike } from '../../actions/postActions';\n\n// Like Component\nexport class PostItem extends Component {\n  state = {\n    errors: {}\n  }\n  componentWillReceiveProps(newProps) {\n    if(newProps.errors) {\n      this.setState({ errors: newProps.errors });\n    }\n  }\n  // delete comments\n  onDeleteClick = (id) => {\n    this.props.deletePost(id)\n  }\n  // like\n  onLikeClick(id) {\n    this.props.addLike(id)\n  }\n  // Like pattern\n  findUserLike = (likes) => {\n    const { auth } = this.props\n    // match user's id whether have like\n    if(likes.filter(like => like.user === auth.user.id).length > 0) return true\n    else return false\n  }\n  // Cancel like\n  onUnlikeClick(id) {\n    this.props.removeLike(id)\n  }\n  render() {\n    //get params from parent component\n    const { post, auth, showActions } = this.props\n    return (\n      <div className=\"card card-body mb3\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <a href=\"profile.html\">\n              <img src={post.avatar} alt=\"\" className=\"rounded-circle d-nonse d-md-block\"/>\n            </a>\n          </div>\n          <div className=\"col-md-10\">\n            <p className=\"lead\">{post.name}</p>\n            {\n              showActions ? (\n                <span>\n                  <button onClick={this.onLikeClick.bind(this, post._id)} type=\"button\" className=\"btn btn-light mr-1\">\n                    <i className={classnames(\"fas fa-thumbs-up\", {\n                      'text-info': this.findUserLike(post.likes)\n                    })}></i>\n                    <span className=\"badge badge-light\">{post.likes.length}</span>\n                  </button>\n                  <button onClick={this.onUnlikeClick.bind(this, post._id)} type=\"button\" className=\"btn btn-light mr-1\">\n                    <i className=\"text-secondary fas fa-thumbs-down\"></i>\n                  </button>\n                  <Link to={`/post/${post._id}`} className=\"btn but-info mr-1\">\n                    Encouraging comments\n                  </Link>\n                  {\n                    // judge whether the Login Id is same as the comment Id, if same, can delete it\n                    post.user === auth.user.id ? (\n                      <button \n                      onClick={() => this.onDeleteClick(post._id)}\n                      type=\"button\"\n                      className=\"btn btn-danger mr-1\">\n                        Delete\n                      </button>\n                    ) : null\n                  }\n                </span>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nPostItem.defaultProps = {\n  showActions: true\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deletePost: (id) => {\n      dispatch(deletePost(id))\n    },\n    addLike: (id) => {\n      dispatch(addLike(id))\n    },\n    removeLike: () => {\n      dispatch(removeLike(id))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem);"]},"metadata":{},"sourceType":"module"}