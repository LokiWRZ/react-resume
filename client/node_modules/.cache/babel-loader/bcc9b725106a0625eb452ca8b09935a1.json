{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/components/auth/Register.js\";\nimport React, { Component } from 'react'; // define the type transferred by reduce\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport { withRouter } from 'react-router-dom';\nimport { TextFieldGroup } from '../../common/TextFieldGroup'; //import classnames from 'classnames'\n\nexport class Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: \"\",\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n  }\n\n  //render page\n  componentDidMount() {\n    //if auth, jump to control page\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Create New Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextFieldGroup, {\n      placeholder: \"username\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      errpr: errors.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"email\",\n      placeholder: \"email address\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      error: errors.email,\n      info: \"We use 'gravatar' global avatars, if need avator showed, please use the email registered in gravatar \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"password\",\n      placeholder: \"pwd\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      error: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"password\",\n      placeholder: \"cf pwd\",\n      name: \"password2\",\n      value: this.state.password2,\n      onChange: this.onChange,\n      error: errors.password2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n} // Get the property value of initalState which have defined in actions in reduce\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n}); //dispatch function\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerUser: (params, history) => {\n      dispatch(registerUser(params, history));\n    }\n  };\n}; //Define the type transferred by reduce\n\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Register));","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/components/auth/Register.js"],"names":["React","Component","PropTypes","connect","registerUser","withRouter","TextFieldGroup","Register","state","name","email","password","password2","errors","onChange","e","setState","target","value","onSubmit","preventDefault","newUser","props","history","componentDidMount","auth","isAuthenticated","push","UNSAFE_componentWillReceiveProps","nextProps","render","mapStateToProps","mapDispatchToProps","dispatch","params","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// define the type transferred by reduce\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport { withRouter } from 'react-router-dom';\nimport { TextFieldGroup } from '../../common/TextFieldGroup';\n\n//import classnames from 'classnames'\nexport class Register extends Component {\n  state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: \"\",\n      errors: {}\n  }\n  \n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit = (e) => {\n    e.preventDefault()\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n    }\n    this.props.registerUser(newUser, this.props.history)\n  }\n  //render page\n  componentDidMount() {\n    //if auth, jump to control page\n    if(this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n  }\n  render() {\n    const {errors } = this.state;\n    return(\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Register</h1>\n              <p className=\"lead text-center\">Create New Account</p>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"username\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.onChange}\n                  errpr={errors.name}\n                />\n                <TextFieldGroup\n                  type=\"email\"\n                  placeholder=\"email address\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                  info=\"We use 'gravatar' global avatars, if need avator showed, please use the email registered in gravatar \"\n                />\n                <TextFieldGroup\n                  type=\"password\"\n                  placeholder=\"pwd\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  type=\"password\"\n                  placeholder=\"cf pwd\"\n                  name=\"password2\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n// Get the property value of initalState which have defined in actions in reduce\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n})\n//dispatch function\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    registerUser: (params, history) => {\n      dispatch(registerUser(params,history))\n    }\n  }\n}\n//Define the type transferred by reduce\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Register))"]},"metadata":{},"sourceType":"module"}