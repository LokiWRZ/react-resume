{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/hbms-rebuilt/src/components/post/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getPost } from '../../actions/postActions';\nimport Spinner from '../../common/Spinner';\nimport CommentFeed from './CommentFeed';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm'; // Encouraging comments\n\nexport class Post extends Component {\n  componentDidMount() {\n    // get users' information of encouraging comments, and get user Id by dynamic route\n    this.props.getPost(this.props.match.params.id);\n  }\n\n  render() {\n    const {\n      post,\n      loading\n    } = this.props.post;\n    let postContent;\n\n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      });\n    } else {\n      postContent = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PostItem, {\n        post: post,\n        showActions: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(CommentForm, {\n        postId: post._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(CommentFeed, {\n        postId: post._id,\n        comments: post.comments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-light mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"Return\"), postContent))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPost: id => {\n      dispatch(getPost(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/components/post/Post.js"],"names":["React","Component","connect","Link","getPost","Spinner","CommentFeed","PostItem","CommentForm","Post","componentDidMount","props","match","params","id","render","post","loading","postContent","Object","keys","length","_id","comments","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,OAAO,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAClCS,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWP,OAAX,CAAmB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKN,KAAL,CAAWK,IAArC;AACA,QAAIE,WAAJ;;AACA,QAAGF,IAAI,KAAK,IAAT,IAAiBC,OAAjB,IAA4BE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,KAA6B,CAA5D,EAA+D;AAC7DH,MAAAA,WAAW,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAIE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,IAAI,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAME,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEN,IAAI,CAACM,GAA1B;AAA+B,QAAA,QAAQ,EAAEN,IAAI,CAACO,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGL,WAJH,CADF,CADF,CADF,CADF;AAcD;;AArCiC;;AAwCpC,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLvB,IAAAA,OAAO,EAAGU,EAAD,IAAQ;AACfa,MAAAA,QAAQ,CAACvB,OAAO,CAACU,EAAD,CAAR,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeZ,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getPost } from '../../actions/postActions';\nimport Spinner from '../../common/Spinner';\nimport CommentFeed from './CommentFeed';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\n\n// Encouraging comments\nexport class Post extends Component {\n  componentDidMount() {\n    // get users' information of encouraging comments, and get user Id by dynamic route\n    this.props.getPost(this.props.match.params.id) \n  }\n\n  render() {\n    const { post, loading } = this.props.post;\n    let postContent;\n    if(post === null || loading || Object.keys(post).length === 0) {\n      postContent = <Spinner />\n    } else {\n      postContent = (\n        <div>\n          {/**render userinof component */}\n          <PostItem post={post} showActions={false} />\n          {/**fill comment form */}\n          <CommentForm postId={post._id} />\n          {/**Multi users leave comment to comment, Component */}\n          <CommentFeed postId={post._id} comments={post.comments} />\n        </div>\n      )\n    }\n    return (\n      <div className=\"post\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <Link className=\"btn btn-light mb-3\">\n                Return\n              </Link>\n              {postContent}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPost: (id) => {\n      dispatch(getPost(id))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)"]},"metadata":{},"sourceType":"module"}