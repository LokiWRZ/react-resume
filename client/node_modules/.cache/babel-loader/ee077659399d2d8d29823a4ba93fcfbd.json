{"ast":null,"code":"import { ADD_POST, GET_POSTS, GET_POST, DELETE_POST, POST_LOADDING } from '../actions/types';\nconst initialState = {\n  posts: [],\n  // multi comments\n  post: {},\n  // single comment\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_LOADDING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_POSTS:\n      //require the content of comment\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case GET_POST:\n      // require encouraging comment\n      return { ...state,\n        post: action.payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts]\n      };\n\n    case DELETE_POST:\n      // delete single comment\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload) // filter unequal id, delete id which has been clicked id button\n\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/loki/feature1/hbms-rebuilt/src/reducers/postReducer.js"],"names":["ADD_POST","GET_POSTS","GET_POST","DELETE_POST","POST_LOADDING","initialState","posts","post","loading","state","action","type","payload","filter","_id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,WAAxC,EAAqDC,aAArD,QAA0E,kBAA1E;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AACR;AACXC,EAAAA,IAAI,EAAE,EAFa;AAET;AACVC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,SAAL;AAAgB;AACd,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFT;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,QAAL;AAAe;AACd,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFR;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKD,SAAKR,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,KAA1B;AAFF,OAAP;;AAIF,SAAKH,WAAL;AAAkB;AAChB,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaJ,MAAM,CAACE,OAA/C,CAFF,CAE0D;;AAF1D,OAAP;;AAIF;AACE,aAAOH,KAAP;AA7BJ;AA+BD","sourcesContent":["import { ADD_POST, GET_POSTS, GET_POST, DELETE_POST, POST_LOADDING } from '../actions/types';\n\nconst initialState = {\n  posts: [], // multi comments\n  post: {}, // single comment\n  loading: false\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_LOADDING:\n      return {\n        ...state,\n        loading: true\n      }\n    case GET_POSTS: //require the content of comment\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false\n      }\n    case GET_POST: // require encouraging comment\n     return {\n       ...state,\n       post: action.payload,\n       loading: false\n     }\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts]\n      }\n    case DELETE_POST: // delete single comment\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== action.payload) // filter unequal id, delete id which has been clicked id button\n      }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}